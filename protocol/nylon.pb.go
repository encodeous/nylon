// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: protocol/nylon.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransportBundle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Packets       []*Ny                  `protobuf:"bytes,1,rep,name=Packets,proto3" json:"Packets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransportBundle) Reset() {
	*x = TransportBundle{}
	mi := &file_protocol_nylon_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransportBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportBundle) ProtoMessage() {}

func (x *TransportBundle) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_nylon_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportBundle.ProtoReflect.Descriptor instead.
func (*TransportBundle) Descriptor() ([]byte, []int) {
	return file_protocol_nylon_proto_rawDescGZIP(), []int{0}
}

func (x *TransportBundle) GetPackets() []*Ny {
	if x != nil {
		return x.Packets
	}
	return nil
}

type Ny struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*Ny_RouteOp
	//	*Ny_SeqnoRequestOp
	//	*Ny_ProbeOp
	Type          isNy_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ny) Reset() {
	*x = Ny{}
	mi := &file_protocol_nylon_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ny) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ny) ProtoMessage() {}

func (x *Ny) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_nylon_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ny.ProtoReflect.Descriptor instead.
func (*Ny) Descriptor() ([]byte, []int) {
	return file_protocol_nylon_proto_rawDescGZIP(), []int{1}
}

func (x *Ny) GetType() isNy_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Ny) GetRouteOp() *Ny_Update {
	if x != nil {
		if x, ok := x.Type.(*Ny_RouteOp); ok {
			return x.RouteOp
		}
	}
	return nil
}

func (x *Ny) GetSeqnoRequestOp() *Ny_Source {
	if x != nil {
		if x, ok := x.Type.(*Ny_SeqnoRequestOp); ok {
			return x.SeqnoRequestOp
		}
	}
	return nil
}

func (x *Ny) GetProbeOp() *Ny_Probe {
	if x != nil {
		if x, ok := x.Type.(*Ny_ProbeOp); ok {
			return x.ProbeOp
		}
	}
	return nil
}

type isNy_Type interface {
	isNy_Type()
}

type Ny_RouteOp struct {
	RouteOp *Ny_Update `protobuf:"bytes,1,opt,name=RouteOp,proto3,oneof"`
}

type Ny_SeqnoRequestOp struct {
	SeqnoRequestOp *Ny_Source `protobuf:"bytes,2,opt,name=SeqnoRequestOp,proto3,oneof"`
}

type Ny_ProbeOp struct {
	ProbeOp *Ny_Probe `protobuf:"bytes,3,opt,name=ProbeOp,proto3,oneof"`
}

func (*Ny_RouteOp) isNy_Type() {}

func (*Ny_SeqnoRequestOp) isNy_Type() {}

func (*Ny_ProbeOp) isNy_Type() {}

type Ny_Update struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Source        *Ny_Source             `protobuf:"bytes,1,opt,name=Source,proto3" json:"Source,omitempty"`
	Metric        uint32                 `protobuf:"varint,2,opt,name=Metric,proto3" json:"Metric,omitempty"`
	SeqnoPush     bool                   `protobuf:"varint,3,opt,name=SeqnoPush,proto3" json:"SeqnoPush,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ny_Update) Reset() {
	*x = Ny_Update{}
	mi := &file_protocol_nylon_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ny_Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ny_Update) ProtoMessage() {}

func (x *Ny_Update) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_nylon_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ny_Update.ProtoReflect.Descriptor instead.
func (*Ny_Update) Descriptor() ([]byte, []int) {
	return file_protocol_nylon_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Ny_Update) GetSource() *Ny_Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Ny_Update) GetMetric() uint32 {
	if x != nil {
		return x.Metric
	}
	return 0
}

func (x *Ny_Update) GetSeqnoPush() bool {
	if x != nil {
		return x.SeqnoPush
	}
	return false
}

type Ny_Source struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Seqno         uint32                 `protobuf:"varint,2,opt,name=Seqno,proto3" json:"Seqno,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ny_Source) Reset() {
	*x = Ny_Source{}
	mi := &file_protocol_nylon_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ny_Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ny_Source) ProtoMessage() {}

func (x *Ny_Source) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_nylon_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ny_Source.ProtoReflect.Descriptor instead.
func (*Ny_Source) Descriptor() ([]byte, []int) {
	return file_protocol_nylon_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Ny_Source) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ny_Source) GetSeqno() uint32 {
	if x != nil {
		return x.Seqno
	}
	return 0
}

type Ny_Probe struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         uint64                 `protobuf:"varint,1,opt,name=Token,proto3" json:"Token,omitempty"`
	ResponseToken *uint64                `protobuf:"varint,2,opt,name=ResponseToken,proto3,oneof" json:"ResponseToken,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ny_Probe) Reset() {
	*x = Ny_Probe{}
	mi := &file_protocol_nylon_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ny_Probe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ny_Probe) ProtoMessage() {}

func (x *Ny_Probe) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_nylon_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ny_Probe.ProtoReflect.Descriptor instead.
func (*Ny_Probe) Descriptor() ([]byte, []int) {
	return file_protocol_nylon_proto_rawDescGZIP(), []int{1, 2}
}

func (x *Ny_Probe) GetToken() uint64 {
	if x != nil {
		return x.Token
	}
	return 0
}

func (x *Ny_Probe) GetResponseToken() uint64 {
	if x != nil && x.ResponseToken != nil {
		return *x.ResponseToken
	}
	return 0
}

var File_protocol_nylon_proto protoreflect.FileDescriptor

const file_protocol_nylon_proto_rawDesc = "" +
	"\n" +
	"\x14protocol/nylon.proto\x12\x05proto\"6\n" +
	"\x0fTransportBundle\x12#\n" +
	"\aPackets\x18\x01 \x03(\v2\t.proto.NyR\aPackets\"\x99\x03\n" +
	"\x02Ny\x12,\n" +
	"\aRouteOp\x18\x01 \x01(\v2\x10.proto.Ny.UpdateH\x00R\aRouteOp\x12:\n" +
	"\x0eSeqnoRequestOp\x18\x02 \x01(\v2\x10.proto.Ny.SourceH\x00R\x0eSeqnoRequestOp\x12+\n" +
	"\aProbeOp\x18\x03 \x01(\v2\x0f.proto.Ny.ProbeH\x00R\aProbeOp\x1ah\n" +
	"\x06Update\x12(\n" +
	"\x06Source\x18\x01 \x01(\v2\x10.proto.Ny.SourceR\x06Source\x12\x16\n" +
	"\x06Metric\x18\x02 \x01(\rR\x06Metric\x12\x1c\n" +
	"\tSeqnoPush\x18\x03 \x01(\bR\tSeqnoPush\x1a.\n" +
	"\x06Source\x12\x0e\n" +
	"\x02Id\x18\x01 \x01(\tR\x02Id\x12\x14\n" +
	"\x05Seqno\x18\x02 \x01(\rR\x05Seqno\x1aZ\n" +
	"\x05Probe\x12\x14\n" +
	"\x05Token\x18\x01 \x01(\x04R\x05Token\x12)\n" +
	"\rResponseToken\x18\x02 \x01(\x04H\x00R\rResponseToken\x88\x01\x01B\x10\n" +
	"\x0e_ResponseTokenB\x06\n" +
	"\x04typeB\vZ\tprotocol/b\x06proto3"

var (
	file_protocol_nylon_proto_rawDescOnce sync.Once
	file_protocol_nylon_proto_rawDescData []byte
)

func file_protocol_nylon_proto_rawDescGZIP() []byte {
	file_protocol_nylon_proto_rawDescOnce.Do(func() {
		file_protocol_nylon_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protocol_nylon_proto_rawDesc), len(file_protocol_nylon_proto_rawDesc)))
	})
	return file_protocol_nylon_proto_rawDescData
}

var file_protocol_nylon_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_protocol_nylon_proto_goTypes = []any{
	(*TransportBundle)(nil), // 0: proto.TransportBundle
	(*Ny)(nil),              // 1: proto.Ny
	(*Ny_Update)(nil),       // 2: proto.Ny.Update
	(*Ny_Source)(nil),       // 3: proto.Ny.Source
	(*Ny_Probe)(nil),        // 4: proto.Ny.Probe
}
var file_protocol_nylon_proto_depIdxs = []int32{
	1, // 0: proto.TransportBundle.Packets:type_name -> proto.Ny
	2, // 1: proto.Ny.RouteOp:type_name -> proto.Ny.Update
	3, // 2: proto.Ny.SeqnoRequestOp:type_name -> proto.Ny.Source
	4, // 3: proto.Ny.ProbeOp:type_name -> proto.Ny.Probe
	3, // 4: proto.Ny.Update.Source:type_name -> proto.Ny.Source
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_protocol_nylon_proto_init() }
func file_protocol_nylon_proto_init() {
	if File_protocol_nylon_proto != nil {
		return
	}
	file_protocol_nylon_proto_msgTypes[1].OneofWrappers = []any{
		(*Ny_RouteOp)(nil),
		(*Ny_SeqnoRequestOp)(nil),
		(*Ny_ProbeOp)(nil),
	}
	file_protocol_nylon_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protocol_nylon_proto_rawDesc), len(file_protocol_nylon_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protocol_nylon_proto_goTypes,
		DependencyIndexes: file_protocol_nylon_proto_depIdxs,
		MessageInfos:      file_protocol_nylon_proto_msgTypes,
	}.Build()
	File_protocol_nylon_proto = out.File
	file_protocol_nylon_proto_goTypes = nil
	file_protocol_nylon_proto_depIdxs = nil
}
